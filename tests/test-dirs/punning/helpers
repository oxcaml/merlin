#!/usr/bin/env bash

file="$1"

highlight_char_range_from_file () {
  line=$1
  start=$2
  end=$3
  sed -n "${line}p" "$file"
  printf ' %.0s' $(seq 1 $start)
  printf '^%.0s' $(seq 1 $(($end - $start)))
  printf "\n"
}

highlight_line_colon_col_from_file () {
  line_col=$1
  echo "$line_col" | (IFS=: read line col; highlight_char_range_from_file "$line" "$col" "$((col + 1))")
}

type_enclosing () {
  $MERLIN single type-enclosing -position "$1" -filename "$file" < "$file" | jq '.value[0].type' -r
  highlight_line_colon_col_from_file "$1"
}

locate () {
  echo "Locating:"
  highlight_line_colon_col_from_file "$1"
  res=$($MERLIN single locate -position "$1" -filename "$file" < "$file")
  if (echo "$res" | jq -e '.value | type == "string"' > /dev/null); then
    # an error occurred, so print the error
    echo "$res" | jq -r
  else
    line=$(echo "$res" | jq .value.pos.line)
    col=$(echo "$res" | jq .value.pos.col)
    echo "Found definition at $line:$col:"
    highlight_char_range_from_file $line $col $((col + 1))
  fi
}

occurrences () {
  echo "Occurrences of:"
  highlight_line_colon_col_from_file "$1"
  res=$($MERLIN single occurrences -identifier-at "$1" -filename "$file" < "$file")
  echo "$res" | jq -c .value[] | while read -r occurrence; do
    line=$(echo "$occurrence" | jq .start.line)
    start=$(echo "$occurrence" | jq .start.col)
    end=$(echo "$occurrence" | jq .end.col)
    echo "Occurrence at $line:$start-$end:"
    highlight_char_range_from_file "$line" "$start" "$end"
  done
}
